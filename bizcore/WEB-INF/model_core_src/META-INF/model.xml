<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">
  <bean id="modelService" class="com.doublechaintech.model.ModelService"/>
	<bean id="hikariConfig" class="com.zaxxer.hikari.HikariConfig">
  	  <property name="poolName" value="model_connection_pool" />
  	  <property name="dataSourceClassName" value="${app.database.dataSourceClassName}"/>
  	  <property name="maximumPoolSize" value="10" />
  	  <property name="maxLifetime" value="60000" />
  	  <property name="idleTimeout" value="30000" />
  	  <property name="dataSourceProperties">
  	   <props>
  	     <prop key="url">${app.database.jdbcURL}</prop>
  	     <prop key="user">${app.database.username}</prop>
  	     <prop key="password">${app.database.password}</prop>
  	   </props>
  	  </property>
  	</bean>

  <bean class="com.doublechaintech.model.search.SearchConfiguration"/>
  <bean class="com.doublechaintech.model.Beans"/>
  <bean class="com.doublechaintech.model.meta.MetaRegistry"/>
  <bean id="templateRender" class="com.doublechaintech.model.templates.UITemplateRender"/>
  <bean id="DBUtil" class="com.doublechaintech.model.DBUtil">
		<property name="namedParameterJdbcTemplate" ref="namedParameterJdbcTemplate"/>
	</bean>

	<bean id="namedParameterJdbcTemplate" class="com.doublechaintech.model.CustomNamedParameterJdbcTemplate">
		<constructor-arg type="org.springframework.jdbc.core.JdbcOperations" ref="jdbcTemplate0" />
	</bean>

	<bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"/>
	</bean>

	<!-- dbcp 2.6 https://commons.apache.org/proper/commons-dbcp/configuration.html
	<bean id="hikariConfig" class="com.zaxxer.hikari.HikariConfig">
	  <property name="poolName" value="model_connection_pool" />
	  <property name="dataSourceClassName" value="${app.database.dataSourceClassName}"/>
	  <property name="maximumPoolSize" value="10" />
	  <property name="maxLifetime" value="60000" />
	  <property name="idleTimeout" value="30000" />
	  <property name="dataSourceProperties">
	   <props>
	     <prop key="url">${app.database.jdbcURL}</prop>
	     <prop key="user">${app.database.username}</prop>
	     <prop key="password">${app.database.password}</prop>
	     <prop key="prepStmtCacheSize">250</prop>
	     <prop key="prepStmtCacheSqlLimit">2048</prop>
	     <prop key="cachePrepStmts">true</prop>
	     <prop key="useServerPrepStmts">true</prop>
	   </props>
	  </property>
	</bean>
	-->

	<bean id="dataSource" class="com.zaxxer.hikari.HikariDataSource" destroy-method="close">
	  <constructor-arg ref="hikariConfig" />
	</bean>

  <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
    <property name="dataSource" ref="dataSource"/>
    <property name="fetchSize" value="1000"/>
    <property name="maxRows" value="1000"/>
    <property name="queryTimeout" value="10"/>
  </bean>

  <bean id="jdbcTemplate0" class="org.springframework.jdbc.core.JdbcTemplate">
    <property name="dataSource" ref="dataSource"/>
    <property name="fetchSize" value="1000"/>
    <property name="maxRows" value="200000"/>
    <property name="queryTimeout" value="10"/>
  </bean>



	<bean id="communityDAOBase" class="com.doublechaintech.model.community.CommunityJDBCTemplateDAO">
		<property name="jdbcTemplate" ref="jdbcTemplate" />
		
		<property name="familyDAO" ref="familyDAO" />
		
	</bean>
	<bean id="communityDAO" parent="communityDAOBase"></bean>
	

	<bean id="familyDAOBase" class="com.doublechaintech.model.family.FamilyJDBCTemplateDAO">
		<property name="jdbcTemplate" ref="jdbcTemplate" />
		
 		<property name="communityDAO" ref="communityDAO" />
 		
		<property name="kidDAO" ref="kidDAO" />
		
	</bean>
	<bean id="familyDAO" parent="familyDAOBase"></bean>
	

	<bean id="kidDAOBase" class="com.doublechaintech.model.kid.KidJDBCTemplateDAO">
		<property name="jdbcTemplate" ref="jdbcTemplate" />
		
 		<property name="familyDAO" ref="familyDAO" />
 		
	</bean>
	<bean id="kidDAO" parent="kidDAOBase"></bean>
	

	<bean id="mobileAppDAOBase" class="com.doublechaintech.model.mobileapp.MobileAppJDBCTemplateDAO">
		<property name="jdbcTemplate" ref="jdbcTemplate" />
		
		<property name="pageDAO" ref="pageDAO" />
		
		<property name="pageTypeDAO" ref="pageTypeDAO" />
		
	</bean>
	<bean id="mobileAppDAO" parent="mobileAppDAOBase"></bean>
	

	<bean id="pageDAOBase" class="com.doublechaintech.model.page.PageJDBCTemplateDAO">
		<property name="jdbcTemplate" ref="jdbcTemplate" />
		
 		<property name="pageTypeDAO" ref="pageTypeDAO" />
 		
 		<property name="mobileAppDAO" ref="mobileAppDAO" />
 		
		<property name="slideDAO" ref="slideDAO" />
		
		<property name="uiActionDAO" ref="uiActionDAO" />
		
		<property name="sectionDAO" ref="sectionDAO" />
		
	</bean>
	<bean id="pageDAO" parent="pageDAOBase"></bean>
	

	<bean id="pageTypeDAOBase" class="com.doublechaintech.model.pagetype.PageTypeJDBCTemplateDAO">
		<property name="jdbcTemplate" ref="jdbcTemplate" />
		
 		<property name="mobileAppDAO" ref="mobileAppDAO" />
 		
	</bean>
	<bean id="pageTypeDAO" parent="pageTypeDAOBase"></bean>
	

	<bean id="slideDAOBase" class="com.doublechaintech.model.slide.SlideJDBCTemplateDAO">
		<property name="jdbcTemplate" ref="jdbcTemplate" />
		
 		<property name="pageDAO" ref="pageDAO" />
 		
	</bean>
	<bean id="slideDAO" parent="slideDAOBase"></bean>
	

	<bean id="uiActionDAOBase" class="com.doublechaintech.model.uiaction.UiActionJDBCTemplateDAO">
		<property name="jdbcTemplate" ref="jdbcTemplate" />
		
 		<property name="pageDAO" ref="pageDAO" />
 		
	</bean>
	<bean id="uiActionDAO" parent="uiActionDAOBase"></bean>
	

	<bean id="sectionDAOBase" class="com.doublechaintech.model.section.SectionJDBCTemplateDAO">
		<property name="jdbcTemplate" ref="jdbcTemplate" />
		
 		<property name="pageDAO" ref="pageDAO" />
 		
	</bean>
	<bean id="sectionDAO" parent="sectionDAOBase"></bean>
	

	<bean id="userDomainDAOBase" class="com.doublechaintech.model.userdomain.UserDomainJDBCTemplateDAO">
		<property name="jdbcTemplate" ref="jdbcTemplate" />
		
		<property name="userAllowListDAO" ref="userAllowListDAO" />
		
		<property name="secUserDAO" ref="secUserDAO" />
		
		<property name="publicKeyTypeDAO" ref="publicKeyTypeDAO" />
		
	</bean>
	<bean id="userDomainDAO" parent="userDomainDAOBase"></bean>
	

	<bean id="userAllowListDAOBase" class="com.doublechaintech.model.userallowlist.UserAllowListJDBCTemplateDAO">
		<property name="jdbcTemplate" ref="jdbcTemplate" />
		
 		<property name="userDomainDAO" ref="userDomainDAO" />
 		
	</bean>
	<bean id="userAllowListDAO" parent="userAllowListDAOBase"></bean>
	

	<bean id="secUserDAOBase" class="com.doublechaintech.model.secuser.SecUserJDBCTemplateDAO">
		<property name="jdbcTemplate" ref="jdbcTemplate" />
		
 		<property name="userDomainDAO" ref="userDomainDAO" />
 		
		<property name="userAppDAO" ref="userAppDAO" />
		
		<property name="loginHistoryDAO" ref="loginHistoryDAO" />
		
		<property name="wechatWorkappIdentityDAO" ref="wechatWorkappIdentityDAO" />
		
		<property name="wechatMiniappIdentityDAO" ref="wechatMiniappIdentityDAO" />
		
		<property name="keyPairIdentityDAO" ref="keyPairIdentityDAO" />
		
	</bean>
	<bean id="secUserDAO" parent="secUserDAOBase"></bean>
	

	<bean id="userAppDAOBase" class="com.doublechaintech.model.userapp.UserAppJDBCTemplateDAO">
		<property name="jdbcTemplate" ref="jdbcTemplate" />
		
 		<property name="secUserDAO" ref="secUserDAO" />
 		
		<property name="quickLinkDAO" ref="quickLinkDAO" />
		
		<property name="listAccessDAO" ref="listAccessDAO" />
		
	</bean>
	<bean id="userAppDAO" parent="userAppDAOBase"></bean>
	

	<bean id="quickLinkDAOBase" class="com.doublechaintech.model.quicklink.QuickLinkJDBCTemplateDAO">
		<property name="jdbcTemplate" ref="jdbcTemplate" />
		
 		<property name="userAppDAO" ref="userAppDAO" />
 		
	</bean>
	<bean id="quickLinkDAO" parent="quickLinkDAOBase"></bean>
	

	<bean id="listAccessDAOBase" class="com.doublechaintech.model.listaccess.ListAccessJDBCTemplateDAO">
		<property name="jdbcTemplate" ref="jdbcTemplate" />
		
 		<property name="userAppDAO" ref="userAppDAO" />
 		
	</bean>
	<bean id="listAccessDAO" parent="listAccessDAOBase"></bean>
	

	<bean id="loginHistoryDAOBase" class="com.doublechaintech.model.loginhistory.LoginHistoryJDBCTemplateDAO">
		<property name="jdbcTemplate" ref="jdbcTemplate" />
		
 		<property name="secUserDAO" ref="secUserDAO" />
 		
	</bean>
	<bean id="loginHistoryDAO" parent="loginHistoryDAOBase"></bean>
	

	<bean id="candidateContainerDAOBase" class="com.doublechaintech.model.candidatecontainer.CandidateContainerJDBCTemplateDAO">
		<property name="jdbcTemplate" ref="jdbcTemplate" />
		
		<property name="candidateElementDAO" ref="candidateElementDAO" />
		
	</bean>
	<bean id="candidateContainerDAO" parent="candidateContainerDAOBase"></bean>
	

	<bean id="candidateElementDAOBase" class="com.doublechaintech.model.candidateelement.CandidateElementJDBCTemplateDAO">
		<property name="jdbcTemplate" ref="jdbcTemplate" />
		
 		<property name="candidateContainerDAO" ref="candidateContainerDAO" />
 		
	</bean>
	<bean id="candidateElementDAO" parent="candidateElementDAOBase"></bean>
	

	<bean id="wechatWorkappIdentityDAOBase" class="com.doublechaintech.model.wechatworkappidentity.WechatWorkappIdentityJDBCTemplateDAO">
		<property name="jdbcTemplate" ref="jdbcTemplate" />
		
 		<property name="secUserDAO" ref="secUserDAO" />
 		
	</bean>
	<bean id="wechatWorkappIdentityDAO" parent="wechatWorkappIdentityDAOBase"></bean>
	

	<bean id="wechatMiniappIdentityDAOBase" class="com.doublechaintech.model.wechatminiappidentity.WechatMiniappIdentityJDBCTemplateDAO">
		<property name="jdbcTemplate" ref="jdbcTemplate" />
		
 		<property name="secUserDAO" ref="secUserDAO" />
 		
	</bean>
	<bean id="wechatMiniappIdentityDAO" parent="wechatMiniappIdentityDAOBase"></bean>
	

	<bean id="keyPairIdentityDAOBase" class="com.doublechaintech.model.keypairidentity.KeyPairIdentityJDBCTemplateDAO">
		<property name="jdbcTemplate" ref="jdbcTemplate" />
		
 		<property name="publicKeyTypeDAO" ref="publicKeyTypeDAO" />
 		
 		<property name="secUserDAO" ref="secUserDAO" />
 		
	</bean>
	<bean id="keyPairIdentityDAO" parent="keyPairIdentityDAOBase"></bean>
	

	<bean id="publicKeyTypeDAOBase" class="com.doublechaintech.model.publickeytype.PublicKeyTypeJDBCTemplateDAO">
		<property name="jdbcTemplate" ref="jdbcTemplate" />
		
 		<property name="userDomainDAO" ref="userDomainDAO" />
 		
		<property name="keyPairIdentityDAO" ref="keyPairIdentityDAO" />
		
	</bean>
	<bean id="publicKeyTypeDAO" parent="publicKeyTypeDAOBase"></bean>
	

	<bean id="treeNodeDAOBase" class="com.doublechaintech.model.treenode.TreeNodeJDBCTemplateDAO">
		<property name="jdbcTemplate" ref="jdbcTemplate" />
		
	</bean>
	<bean id="treeNodeDAO" parent="treeNodeDAOBase"></bean>
	


	<bean id="DAOGroupBase" class="com.doublechaintech.model.DAOGroup">
		<property name="communityDAO" ref="communityDAO"/>
		<property name="familyDAO" ref="familyDAO"/>
		<property name="kidDAO" ref="kidDAO"/>
		<property name="mobileAppDAO" ref="mobileAppDAO"/>
		<property name="pageDAO" ref="pageDAO"/>
		<property name="pageTypeDAO" ref="pageTypeDAO"/>
		<property name="slideDAO" ref="slideDAO"/>
		<property name="uiActionDAO" ref="uiActionDAO"/>
		<property name="sectionDAO" ref="sectionDAO"/>
		<property name="userDomainDAO" ref="userDomainDAO"/>
		<property name="userAllowListDAO" ref="userAllowListDAO"/>
		<property name="secUserDAO" ref="secUserDAO"/>
		<property name="userAppDAO" ref="userAppDAO"/>
		<property name="quickLinkDAO" ref="quickLinkDAO"/>
		<property name="listAccessDAO" ref="listAccessDAO"/>
		<property name="loginHistoryDAO" ref="loginHistoryDAO"/>
		<property name="candidateContainerDAO" ref="candidateContainerDAO"/>
		<property name="candidateElementDAO" ref="candidateElementDAO"/>
		<property name="wechatWorkappIdentityDAO" ref="wechatWorkappIdentityDAO"/>
		<property name="wechatMiniappIdentityDAO" ref="wechatMiniappIdentityDAO"/>
		<property name="keyPairIdentityDAO" ref="keyPairIdentityDAO"/>
		<property name="publicKeyTypeDAO" ref="publicKeyTypeDAO"/>
		<property name="treeNodeDAO" ref="treeNodeDAO"/>
	</bean>
	<bean id="DAOGroup" parent="DAOGroupBase"></bean>

	<bean id="dbQuerier" class="com.terapico.utils.MySqlDBQuerier">
  	<property name="dataSource" ref="dataSource" />
  </bean>
</beans>




<!--

	各种候选配置，可以选择你更为熟悉的类型
	Creating TransactionManager Bean, since JDBC we are creating of type
		DataSourceTransactionManager

		<bean id="hikariConfig" class="com.zaxxer.hikari.HikariConfig">
	  <property name="poolName" value="mercatus_connection_pool" />
	  <property name="dataSourceClassName" value="com.mysql.cj.jdbc.MysqlXADataSource"/>
	  <property name="maximumPoolSize" value="50" />
	  <property name="maxLifetime" value="60000" />
	  <property name="idleTimeout" value="30000" />
	  <property name="dataSourceProperties">
	   <props>
	     <prop key="url">${app.database.jdbcURL}</prop>
	     <prop key="user">${app.database.username}</prop>
	     <prop key="password">${app.database.password}</prop>
	     <prop key="prepStmtCacheSize">250</prop>
	     <prop key="prepStmtCacheSqlLimit">2048</prop>
	     <prop key="cachePrepStmts">true</prop>
	     <prop key="useServerPrepStmts">true</prop>
	   </props>
	  </property>
	</bean>

	<bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource" destroy-method="close" >

		<property name="url" value="${app.database.jdbcURL}" />
		<property name="username" value="${app.database.username}" />
		<property name="password" value="${app.database.password}" />
		<property name="driverClassName" value="${app.database.driverClass}" />
		<property name="initialSize" value="${app.database.pool.initialSize}" />
		<property name="maxTotal" value="${app.database.pool.maxActive}" />

		<property name="testOnBorrow" value="true" />
		<property name="testWhileIdle" value="true" />
		<property name="validationQuery" value="SELECT 1 from sec_user_data" />
		<property name="removeAbandonedTimeout" value="55" />
		<property name="removeAbandonedOnBorrow" value="true"/>

	</bean>

	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close" >

		<property name="jdbcUrl" value="${app.database.jdbcURL}" />
		<property name="user" value="${app.database.username}" />
		<property name="password" value="${app.database.password}" />
		<property name="driverClass" value="${app.database.driverClass}" />

  		<property name="minPoolSize" value="10"/>
  		<property name="maxPoolSize" value="50"/>
  		<property name="acquireIncrement" value="1"/>
  		<property name="idleConnectionTestPeriod" value="1000"/>
  		<property name="maxStatements" value="250"/>
  		<property name="checkoutTimeout" value="60000"/>
  		<property name="initialPoolSize" value="10" />

	</bean>


	<bean id="hikariConfig" class="com.zaxxer.hikari.HikariConfig">
	  <property name="poolName" value="mercatus_connection_pool" />
	  <property name="dataSourceClassName" value="${app.database.dataSourceClassName}"/>
	  <property name="maximumPoolSize" value="50" />
	  <property name="maxLifetime" value="60000" />
	  <property name="idleTimeout" value="30000" />
	  <property name="dataSourceProperties">
	   <props>
	     <prop key="url">${app.database.jdbcURL}</prop>
	     <prop key="user">${app.database.username}</prop>
	     <prop key="password">${app.database.password}</prop>
	     <prop key="prepStmtCacheSize">250</prop>
	     <prop key="prepStmtCacheSqlLimit">2048</prop>
	     <prop key="cachePrepStmts">true</prop>
	     <prop key="useServerPrepStmts">true</prop>
	   </props>
	  </property>
	</bean>
	<bean id="dataSource" class="com.zaxxer.hikari.HikariDataSource" destroy-method="close">
	  <constructor-arg ref="hikariConfig" />
	</bean>


-->



















